package com.dxhy.order.dao;

import com.dxhy.order.model.OrderInfo;
import com.dxhy.order.model.OrderProcessInfo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

@Mapper
public interface OrderProcessInfoMapper {

    /**
     * This METHOD was generated by MyBatis Generator.
     * This METHOD corresponds to the database table order_process_info
     *
     * @mbggenerated
     */
    int insert(OrderProcessInfo record);

    /**
     * 根据订单处理表id获取订单处理表数据
     *
     * @param id
     * @return
     */
    OrderProcessInfo selectOrderProcessInfoByProcessId(String id);

    /**
     * ddh在订单中的个数
     *
     * @param process 订单号
     * @return int 个数
     */
    int countByDdh(OrderProcessInfo process);


    OrderProcessInfo queryOrderProcessInfoByFpqqlsh(String fpqqlsh);

    List<OrderProcessInfo> selectOrderProcessInfoByDdqqpch(String ddqqpch);

    /**
     * 根据发票请求流水号(订单请求流水号)获取订单处理表数据,用于查询数据是否存在
     *
     * @param fpqqlsh
     * @return
     */
    OrderProcessInfo selectOrderProcessInfoByDdqqlsh(String fpqqlsh);

    /**
     * 更新处理表数据
     *
     * @param orderProcessInfo
     * @return
     */
    int updateOrderProcessInfoByProcessId(OrderProcessInfo orderProcessInfo);

    /**
     * 根据条件查询顶单列表
     *
     * @param map
     * @return
     */
    List<Map> queryOrderInfo(@Param("map") Map map);

    /**
     * 通过orderId查询处理表
     *
     * @param orderId
     * @return
     */
    OrderProcessInfo selectByOrderId(String orderId);

    /**
     * selectProcessInfoByProcessId 通过处理扩展表parent_order_process_id得到处理表
     *
     * @param orderProcessInfo
     * @return
     */
    OrderProcessInfo selectProcessInfoById(OrderProcessInfo orderProcessInfo);

    /**
     * @param @param  list
     * @param @param  key
     * @param @return
     * @return int
     * @throws
     * @Title : updateOrderStatusByList(这里用一句话描述这个方法的作用)
     * @Description ：
     */
    int updateOrderStatusByList(@Param("list") List<OrderProcessInfo> list, @Param("ddzt") String key);

    /**
     * 根据id修改订单状态
     *
     * @param
     * @param key
     * @return
     */
    int updateOrderStatusByIdList(@Param("list") List<String> ids, @Param("ddzt") String key);

    /**
     * 数据库数据批量插入
     */
    int insertProcessByList(@Param("list") List<OrderProcessInfo> processInfoList);

    List<LinkedHashMap> selectOrderProcessByFpqqlshDdhNsrsbh(@Param("xhf_nsrsbh") String xsf_nsrsbh, @Param("ddh") String ddh, @Param("fpqqlsh") String fpqqlsh);

    /**
     * 查询OrderProcessInfo Id
     *
     * @param orderProcessInfo
     * @return
     */
    String selectOrderProcessInfoId(OrderProcessInfo orderProcessInfo);

    /**
     * 根据多个id查询订单结果
     *
     * @param ids
     * @return
     */
    List<OrderProcessInfo> selectByPrimaryKeys(@Param("ids") List<String> ids);


    int updateOrderProcessInfo(@Param("orderInfo") OrderInfo orderInfo);

    /**
     * 根据纳税人识别号，业务类型来统计金额和票数
     *
     * @param map
     * @return IOrderInfoService.java
     * author wangruwei
     * 2019年7月5日
     */
    List<Map<String, Object>> selectYwlxCount(Map<String, Object> map);

    /**
     * 业务类型点详情获取具体销方下的列表
     *
     * @param map
     * @return GoodsCountController.java
     * author wangruwei
     * 2019年7月5日
     */
    List<Map<String, Object>> selectYwlxDetailList(Map<String, Object> map);

    /**
     * @param paramMap
     * @return 业务类型统计，统计各项，总金额，票数这些
     * IOrderInfoService.java
     * author wangruwei
     * 2019年7月16日
     */
    Map<String, Object> selectYwlxCountTotal(Map<String, Object> paramMap);

    List<Map> selectHangXininfo(@Param("fpqqlsh") String s);

    List<LinkedHashMap> selectC48FpkjLogList(@Param("c48DbName") String c48DbName, @Param("kplsh") String kplsh);

    List<LinkedHashMap> selectC48FpkjXxList(@Param("c48DbName") String c48DbName, @Param("kplsh") String kplsh);

    List<LinkedHashMap> selectbwFpkjLogList(@Param("bwDbName") String bwDbName, @Param("kplsh") String kplsh);

    List<LinkedHashMap> selectbwFpkjXxList(@Param("bwDbName") String bwDbName, @Param("kplsh") String kplsh);

    List<LinkedHashMap> selectA9FpkjLogList(@Param("a9DbName") String a9DbName, @Param("kplsh") String kplsh);

    List<LinkedHashMap> selectA9FpkjXxList(@Param("a9DbName") String a9DbName, @Param("kplsh") String kplsh);
}
